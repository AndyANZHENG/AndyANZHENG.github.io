{"componentChunkName":"component---src-templates-handout-js","path":"/handout/java-script-conditional-and-loops","webpackCompilationHash":"31b27fa9e95a2d246a77","result":{"data":{"markdownRemark":{"rawMarkdownBody":"# JavaScript Conditionals and loops\n\n## Learning Objectives\n\n- Understand and apply conditionals\n- Understand and apply loops\n\nConditional statements are used to perform different actions based on different conditions.\n\n## Conditionals\n\n### Conditional Statements\n\nVery often when you write code, you want to perform different actions for different decisions.\n\nYou can use conditional statements in your code to do this.\n\nIn JavaScript we have the following conditional statements:\n\n- Use to specify a block of code to be executed, if a specified condition is true\n\n- Use to specify a block of code to be executed, if the same condition is false\n\n- Use to specify a new condition to test, if the first condition is false\n\n- Use:\n\n### `if / else`\n\n```js\nif (condition) {\n  doSomething();\n} else if (differentCondition) {\n  doSomethingElse();\n} else {\n  doSomethingElseAgain();\n}\n```\n\nThe `if/else` statement runs until one condition is met, if none of the conditions are met the else statement runs. Here is the flow chart of a if-block\n\n![if_flow](/ptcb/img/if_flow.jpg)\n\n### `switch` statement\n\n```js\nswitch (expression) {\n  case value1:\n    // code block\n    break;\n  case value2:\n    // code block\n    break;\n  default:\n  // code block\n}\n```\n\nThe flow chart of a switch statement is as follow:\n\n![switch_flow](/ptcb/img/switch_flow.jpg)\n\n## Loops\n\nLoops run as long as the condition is met. Make sure that the condition is met at some point, otherwise you have an endless loop which will cause your browser to crash.\n\n### Different Kinds of Loops\n\nJavaScript supports different kinds of loops:\n\n- `for` - loops through a block of code a number of times\n\n- `for/in` - loops through the properties of an object\n\n- `while` - loops through a block of code while a specified condition is true\n\n- `do/while` - also loops through a block of code while a specified condition is true\n\nLoops are handy, if you want to run the same code over and over again, each time with a different value.\n\nOften this is the case when working with arrays:\n\nInstead of writing:\n\n```js\ntext += cars[0] + '<br>';\ntext += cars[1] + '<br>';\ntext += cars[2] + '<br>';\ntext += cars[3] + '<br>';\ntext += cars[4] + '<br>';\ntext += cars[5] + '<br>';\n```\n\nYou can write while loop instead.\n\n### While Loop\n\n```js\nvar i = 0;\nwhile (i < 10) {\n  text += cars[i] + '<br>';\n  i++;\n}\n```\n\nThe flow chart of the while loop is as follow:\n\n![while_flow](/ptcb/img/while_flow.jpg)\n\n### Do-While Loop\n\nDO while do exactly the same as while loop except it is run at least once.\n\n```js\nvar i = 0;\ndo {\n  text += cars[i] + '<br>';\n  i++;\n} while (i < 10);\n```\n\nThe flow chart of the do while loop is as follow:\n\n![do_while_flow](/ptcb/img/do_while_flow.jpg)\n\n### For Loop\n\nThe for loop is often the tool you will use when you want to create a loop.\n\nThe for loop has the following syntax:\n\n```js\nfor (var i = 0; i < 5; i++) {\n  doSomething();\n}\n```\n\nThe flow chart of for loop is as follow:\n\n![for_flow](/ptcb/img/for_flow.jpg)\n\n`for ... in` is used to iterate over the properties of an objects\n\nExample:\n\n```js\nvar obj = {\n  a: 1,\n  b: 2,\n  c: 3\n};\n\nfor (var p in obj) {\n  console.log('The value of obj.' + p + ' is ' + obj[p]);\n}\n```\n\n## Exercise\n\nC\n\nWrite a loop that logs every number from 1 to 30.\n\nIf the number is divisible through 3 it should log Hong instead.\nIf the number is divisible by 5 it should log Kong instead.\nIf the number is divisible by 3 and 5 it should log Hong Kong.\n\nSo the output should look something like this:\n\n```js\n1\n2\nHong\n4\nKong\nHong\n7\n8\nHong\nKong\n11\nHong\n13\n14\nHong Kong\n```\n\nD\n\nWrite a function that expects a number as a parameter. If the number that is entered is less than 0, equal to 0, or not a number, the function should return the string ‘ERROR’. If the number that is entered is greater than or equal to 1000000 it should simply return the number. Otherwise it should multiply the number by 10 however many times it takes to get a number that is greater than or equal to 1000000 and return that number. Consider which loop you will need to use to do this.  \nUse a combination of conditionals and loops to create your answer for this question.\n\nWhen the function is run with the values below you can expect these outputs:\n\n```js\nmultiplyNumber('Hello');\n\n// An ERROR will be thrown: ERROR\n\nmultiplyNumber(10);\n\n// the value that is returned is: 1000000\n\nmultiplyNumber(66);\n\n// the value that is returned is: 6600000\n```\n\nBonus Exercise\n\nE\n\nMaya writes weekly articles to a well known magazine, but she is missing one word each time she is about to send the article to the editor. The article is not complete without this word. Maya has a friend, Dan, and he is very good with words, but he doesn’t like to just give them away. He texts Maya a number and she needs to find out the hidden word. The words can contain only the letter: “a”, “b”, “d”, “e”, “i”, “l”, “m”, “n”, “o”, and “t”.\n\nLuckily, Maya has the key:\n\n“a” - 6 “b” - 1 “d” - 7 “e” - 4 “i” - 3 “l” - 2 “m” - 9 “n” - 8 “o” - 0 “t” - 5\n\nYou can help Maya by writing a function that will take a number between 100 and 999999 and return a string with the word.\n\nThe input is always a number, contains only the numbers in the key. The output should be always a string with one word, all lowercase.\n\nMaya won’t forget to thank you at the end of her article :)\n\nOutput is similar to this:\n\n```js\nmaya(1572368);\n\n// The value returned is: Invalid Number!\n\nmaya(15728);\n\n// The value returned is: 'btdln'\n```\n\nF\n\nWrite a function that takes two inputs: a string and a character. The function will count the number of times that character appears in the string. The count is case insensitive.\n\nFor example:\n\n```js\ncountChar('fizzbuzz', 'z');\n// 4\ncountChar('Fancy fifth fly aloof', 'f');\n// 5\n```\n\nThe character can be any alphanumeric character.\n"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"fileAbsolutePath":"/Users/Andy/Desktop/code/PROJECTS/xccelerate/ptcb-site/src/data/week_1/java-script-conditional-and-loops.html.turndown.md","title":"java script conditional and loops"}}}
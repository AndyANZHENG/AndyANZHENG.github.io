{"componentChunkName":"component---src-templates-handout-js","path":"/handout/why-learning-this","webpackCompilationHash":"b953da77ef9f42369bfc","result":{"data":{"markdownRemark":{"rawMarkdownBody":"# What to learn and why\n\n- ## HTML Basics\n\n  ðŸ’¡HTML enables you write content on a web page and organise them\n\n  - head\n  - body\n  - div\n  - img\n  - ol, ul, li\n  - a\n  - p\n  - h1 - h6\n\n- ## CSS Basics\n\n  ðŸ’¡CSS enables you add styles to HTML\n\n  - Selectors: classes, ids, tag\n  - Box model\n    - width\n    - height\n    - border\n    - padding\n    - margin\n  - Floating\n    - right\n    - left\n    - clear\n\n- ## File structure of a simple website\n\n  ðŸ’¡How to keep a clean structure when the number of your files increases\n\n  - Organizing asset files (images, javascript, css files)\n  - Organizing web pages\n\n- ## Bootstrap 4\n\n  ðŸ’¡You will love this. A collection of CSS and JavaScript code that gives you the ability to quickly construct a responsive (looks good on different screen sizes) website with clean UI in very short time.\n\n  - Layout (container, row, col)\n  - Structure of typical website\n    - Navbar\n    - Main section\n    - Footer\n\n- ## Deployment\n\n  ðŸ’¡How to make your site accessible for the public\n\n  - surge/github page\n\n- ## Git\n\n  ðŸ’¡Version control tool\n\n  - clone\n  - add\n  - commit\n  - push\n  - pull\n\n- ## JavaScript Fundamentals\n\n  ðŸ’¡Without JavaScript, websites are very limited in the sense that it can only showcase static content that is not interactive. However, web page is not the only place where you can use it. JavaScript is also a full-fledged language and you also can use it to build web servers (i.e. [Nodejs](https://expressjs.com/)), make mobile apps(i.e. [React Native](https://facebook.github.io/react-native/)) and desktop apps(i.e. [Electron](https://electronjs.org/)). In this course, we will only look at how it is used in web pages (but you can apply the skills to the tools I mentioned and build other things.)\n\n  - Install running environment (so that you can run code and practice on your computer)\n\n    - Nodejs (you need this to run JavaScript in terminal)\n\n      - Also required by [Exercism](https://exercism.io)\n\n      ðŸ’¡You can download and submit JavaScript exercises from this website. After you complete the exercise, you can run automated test to see if the answer is correct.\n\n    - Browser console (you may already have)\n\n    ðŸ’¡You can test short pieces of code in here\n\n  - ðŸ˜Ž**Programming basics (Core part)**\n\n    ðŸ’¡No matter what we are going to create, the foundation is always the most important. Understanding and practicing the concepts is essential to the quality of your program/website/application. For each topic, we are supposed to do at least one exercise from Exercism/materials to gain a better understanding of programmatic thinking and how application and programs achieve certain things (can be seemingly simple as sorting and search things in a collection but it is actually crucial when speed and space is concerned).\n\n    - Data types\n\n      ðŸ’¡How we store data in JavaScript temporally(in the run time of a program)\n\n      - primitive data types\n\n        ðŸ’¡simply means built-in data types in the language\n\n        - Boolean\n        - Null\n        - Undefined\n        - Number\n        - String\n\n      - other types\n\n        ðŸ’¡data types built based on primitive data types\n\n        - Array\n        - Object\n\n    - Variable\n\n      ðŸ’¡How we refer to data (mentioned above) after declaration\n\n      - var\n      - const\n      - let\n\n    - Conditionals and loops\n\n      ðŸ’¡How we give instructions conditionally\n\n    - Functions\n\n      ðŸ’¡How we encapsulate and abstract logic when code base (the number of lines of code) increases and help with splitting the program into smaller pieces\n\n    - Recommanded JavaScript Exercism Exercises\n      - Hello world\n        - how to run a program\n        - console.log\n        - function syntax\n      - twoFer\n        - if else\n        - function syntax (input and ouput)\n        - concatenate strings\n        - es6 string syntax\n      - Leap year\n        - conditionals\n      - Resistor Color\n        - array\n        - map\n        - indexOf\n        - clean code and messy code\n      - Resistor Color Duo\n      - more to come...\n"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"fileAbsolutePath":"/Users/Andy/Desktop/code/PROJECTS/xccelerate/ptcb-site/src/data/Overview/why-learning-this.md","title":"why learning this"}}}